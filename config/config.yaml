version: 0.0.1

server:
  ip: localhost
  port: 8080

frontend_host: localhost:9000

user:
  captchaFormat: 【2fun.top】%s为本次验证的验证码，请在5分钟内完成验证。为保证账号安全，请勿泄漏此验证码。

mail:
  host: smtp.qq.com
  userName: 2435203490@qq.com
  password:
  defaultEncoding: utf-8
  protocol: smtp
  port: 587
  properties:
    smtp:
      socketFactory:
        port: 587
        class: javax.net.ssl.SSLSocketFactory
      ssl:
        enable: true

log:
  storageLocation: ../logs/
  rotationTime: 24
  remainRotationCount: 2 #日志数量
  #日志级别 6表示全都打印，测试阶段建议设置为6
  remainLogLevel: 6
  elasticSearchSwitch: false
  elasticSearchAddr: [ docker.for.mac.localhost:9201 ]
  elasticSearchUser: ""
  elasticSearchPassword: ""

landlords:
  frontend-host: landlords.2fun.top
  max_seconds_for_every_round: 30

session:
  user_session_key: curUser
  secret: qwq
  name: landlord-session

tls:
  addr: :443
  cert: config/server.crt
  key: config/server.key

database:
  driver: MySQL #SQLite MySQL
#  url: jdbc:sqlite:db/landlords.sqlite3
#  url: jdbc:mysql://localhost:3306/landlords?serverTimezone=GMT
#  username:
#  password:

mysql:
  address: [ docker.for.mac.localhost:3306 ] #mysql地址 目前仅支持单机，默认即可
  userName: root #mysql用户名，建议修改
  password: 123456 # mysql密码，建议修改
  databaseName: poetize #默认即可
  msgTableNum: 1
  maxOpenConns: 100
  maxIdleConns: 10
  maxLifeTime: 5
  logLevel: 1 #1=slient 2=error 3=warn 4=info
  slowThreshold: 500

#---------------Infrastructure configuration---------------------#
etcd:
  etcdSchema: wan_go  #默认即可
  etcdAddr: [ docker.for.mac.localhost:2379 ] #单机部署时，默认即可
  userName:
  password:
  secret:

mongo:
  dbUri: ""#当dbUri值不为空则直接使用该值
  #dbAddress: 127.0.0.1:37017  #单机时为mongo地址，使用分片集群时，为mongos地址 默认即可
  dbAddress: [ docker.for.mac.localhost:37017 ]  #单机时为mongo地址，使用分片集群时，为mongos地址 默认即可
  dbDirect: false
  dbTimeout: 60
  dbDatabase: openIM  #mongo db 默认即可
  dbSource: admin
  dbUserName: wan #mongo用户名，建议先不设置
  dbPassword: openIM123  #mongo密码，建议先不设置
  dbMaxPoolSize: 100
  dbRetainChatRecords: 3650 #mongo保存离线消息时间（天），根据需求修改
  chatRecordsClearTime: "0 3 * * *" # 每天凌晨3点清除消息，该配置和linux定时任务一样， 清理操作建议设置在用户活跃少的时候 # 0 3 * * *

redis:
  dbAddress: [ docker.for.mac.localhost:16379 ] #redis地址 单机时，填写一个地址即可，使用redis集群时候，填写集群中多个节点地址（主从地址都可以填写，增加容灾能力），默认即可
  dbMaxIdle: 128
  dbMaxActive: 0
  dbIdleTimeout: 120
  dbUserName:     #only redis version 6.0+ need username
  dbPassWord:  #redis密码 建议修改
  enableCluster: false #如果外部redis以集群方式启动，需要打开此开关

kafka:
  SASLUserName:
  SASLPassword:
  ws2mschat:
    addr: [ docker.for.mac.localhost:9092 ] #kafka配置，默认即可
    topic: "ws2ms_chat" #用于mongo和mysql保存消息
  #  ws2mschatoffline:
  #    addr: [ 127.0.0.1:9092 ] #kafka配置，默认即可
  #    topic: "ws2ms_chat_offline" #原为离线用户消息处理，目前暂时弃用
  msgtomongo:
    addr: [ docker.for.mac.localhost:9092 ] #kafka配置，默认即可
    topic: "msg_to_mongo"
  ms2pschat:
    addr: [ docker.for.mac.localhost:9092 ] #kafka配置，默认即可
    topic: "ms2ps_chat" #消息push
  msgtomodify:
    addr: [ docker.for.mac.localhost:9092 ] #kafka配置，默认即可
    topic: "msg_to_modify"
  consumergroupid:
    msgToTransfer: mongo
    msgToMongo: mongo_ex
    msgToMySql: mysql
    msgToPush: push
    msgToModify: modify

#token config
tokenpolicy:
  jwt_secret: 298b8610-6835-4d12-b8ae-efba3dbcccad
  jwt_expire: 1 #token过期时间（天）

websocket:
  port: [ 80 ]
#  port: [ 443 ]
  max_conn_num: 10000
  max_msg_len: 4096
  handshake_time_out: 10 #second
  online_time_out: 10 #second

api:
  port: [ 10002 ] #api服务端口，默认即可，需要开放此端口或做nginx转发
  listenIP: 0.0.0.0

cmsapi:
  port: [ 10006 ] #管理后台api服务端口，默认即可，需要开放此端口或做nginx转发
  listenIP: 0.0.0.0

sdk:
  wsPort: [ 10003 ] #jssdk服务端口，默认即可，项目中使用jssdk才需开放此端口或做nginx转发
  dataDir: [ ../db/sdk/ ]
  wsAddress: ws://docker.for.mac.localhost:10001
  apiAddress: http://docker.for.mac.localhost:10002

# prometheus每个服务监听的端口数量需要和rpc port保持一致
prometheus:
  enable: false
  userPrometheusPort: [ 20110 ]
  friendPrometheusPort: [ 20120 ]
  messagePrometheusPort: [ 20130 ]
  messageGatewayPrometheusPort: [ 20140 ]
  groupPrometheusPort: [ 20150 ]
  authPrometheusPort: [ 20160 ]
  pushPrometheusPort: [ 20170 ]
  adminCmsPrometheusPort: [ 20200 ]
  officePrometheusPort: [ 20210 ]
  organizationPrometheusPort: [ 20220 ]
  conversationPrometheusPort: [ 20230 ]
  cachePrometheusPort: [ 20240 ]
  realTimeCommPrometheusPort: [ 21300 ]
  messageTransferPrometheusPort: [ 21400, 21401, 21402, 21403 ] # 端口数量和 script/path_info.cfg  msg_transfer_service_num保持一致

blog:
  name: 小世界
  listenIP: 0.0.0.0
  #blog对外服务端口，默认即可，需要开放此端口或做nginx转发
  port: [ 10004 ]
  alismsverify: #阿里云短信配置，在阿里云申请成功后修改以下四项，enable为true则必须修改，阿里云为默认短信验证方式
    accessKeyId:
    accessKeySecret:
    signName:
    verificationCodeTemplateCode:
    enable: false
  tencentsms: #腾讯云短信配置，在腾讯云申请成功后，修改以下选项，enable为true则必须修改
    appID:
    region:
    secretID:
    secretKey:
    signName:
    verificationCodeTemplateCode:
    enable: true
  superCode: 888888 #超级验证码，建议修改掉，收不到短信验证码时可以用此替代
  needInvitationCode: false
  #  second
  codeTTL: 60
  useSuperCode: true
  mail: #仅支持qq邮箱，具体操作参考 https://service.mail.qq.com/cgi-bin/help?subtype=1&id=28&no=1001256 必须修改
    title:
    senderMail:
    senderAuthorizationCode:
    smtpAddr:
    smtpPort:     #需开放此端口 出口方向

